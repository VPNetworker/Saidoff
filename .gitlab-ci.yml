stages:
  - build
  - deploy_prod
  - deploy_dev
before_script:
  docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD
build_job:
  stage: build
  tags:
    - docker
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    - docker tag ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - docker push ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}
    - docker rmi ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    - docker rmi ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_PIPELINE_IID}

deploy_prod_job:
  stage: deploy_prod
  tags:
    - docker
  only:
    - main
  script:
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o StrictHostKeyChecking=no ${USER}@${IP} "
        docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD &&
        docker pull ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest && 
        docker rm -f ${CI_PROJECT_NAME} || true &&
        docker run -dp 8001:8000 -v /var/www/backend/saidoff_group/prod/media:/app/media -v /var/www/backend/saidoff_group/prod/db.sqlite3:/app/db.sqlite3 -v /var/www/backend/saidoff_group/.env:/app/.env --name ${CI_PROJECT_NAME} --restart unless-stopped ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
      "
deploy_dev_job:
  when: manual
  stage: deploy_dev
  tags:
    - docker
  only:
    - staging
  script:
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o StrictHostKeyChecking=no ${USER}@${IP} "
        docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD &&
        docker pull ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest && 
        docker rm -f ${CI_PROJECT_NAME} || true &&
        docker run -dp 8001:8000 -v /var/www/backend/saidoff_group/prod/media:/app/media -v /var/www/backend/saidoff_group/prod/db.sqlite3:/app/db.sqlite3 -v /var/www/backend/saidoff_group/.env:/app/.env --name ${CI_PROJECT_NAME} --restart unless-stopped ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
      "
